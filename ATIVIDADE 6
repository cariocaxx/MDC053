a) 
create table gerente (
  numero_gerente INT NOT NULL PRIMARY KEY,
  nome_gerente VARCHAR (100) NOT NULL
);
Create tableprojeto (
  numero_projeto INT NOT CHAVE PRIMÁRIA,
  nome_projeto VARCHAR (100) NOT NULL,
  data_inicio_projeto DATE,
  numero_gerente INT NOT NULL REFERENCES gerente (numero_gerente)
);
Create table departamento (
  numero_depto INT NOT primary key,
  nome_depto VARCHAR (100) NOT NULL
);
CREATE TABLE empregado (
  numero_empregado INT NOT NULL PRIMARY KEY,
  nome_empregado VARCHAR (100) NOT NULL,
  numero_depto INT REFERENCES departamento (numero_depto)
);
CREATE TABLE projeto_empregado (
  numero_projeto INT NOT NULL,
  numero_empregado INT NOT NULL,
  primary key(numero_projeto, numero_empregado),
 Foreign key (numero_projeto) REFERÊNCIAS projeto (numero_projeto),
  Foreign key (numero_empregado) REFERÊNCIAS empregado (numero_empregado),
  horas_trabalhadas_projeto SMALLINT DEFAULT 0
);

b)
CREATE TABLE forncedor (
  cod_fornecedor INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  nom_fornecedor VARCHAR (100) NOT NULL,
  end_fornecedor VARCHAR (100)
);
CREATE TABLE pedido (
  cod_pedido INT NÃO NULL AUTO_INCREMENT PRIMARY KEY,
  dat_emissao DATA NOT NULL,
  cod_fornecedor INT NOT NULL REFERENCES FORNECEDOR (cod_fornecedor),
  vlr_total_pedido DECIMAL (12,2) PADRÃO 0
);
CREATE TABLE material (
  cod_material INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  dsc_material VARCHAR (100) NOT NULL,
  vlr_unitario DECIMAL (12,2) NOT NULL
);
CREATE TABLE pedido_material (
  cod_pedido INT NOT NULL,
  cod_material INT NOT NULL,
  PRIMARY KEY (cod_pedido, cod_material),
  Foreign key(cod_pedido) REFERÊNCIAS pedido (cod_pedido),
  Foreign key(cod_material) REFERÊNCIAS material (cod_material),
  qtde_material SMALLINT NOT NULL CHECK (qtde_material> 0),
  vlr_material DECIMAL (12,2) Not NULL
);

c)
CREATE TABLE curso (
  id_curso INT PRIMARY KEY,
  nome_curso VARCHAR (100) NOT NULL,
  carga_horaria SMALLINT
);
CREATE TABLE aluno (
  id_aluno INT NOT NULL CHAVE PRIMÁRIA,
  nome_aluno VARCHAR (100) NOT NULL,
  email_aluno VARCHAR (100),
  fone_contato CHAR (14)
);
CRIAR TABELA turma (
  id_turma INT NÃO CHAVE PRIMÁRIA NULA,
  data_matricula DATE NOT NULL,
  id_aluno INT NOT NULL REFERENCES aluno (id_aluno),
  id_curso INT NOT NULL REFERÊNCIAS curso (id_curso)
);

d)
CREATE TABLE especialidade (
  cod_especialidade INT NOT NULL CHAVE PRIMÁRIA,
  dsc_especialidade VARCHAR (100) NOT NULL
);
CREATE TABLE medico (
  cod_medico INT PRIMARY KEY,
  nome_medico VARCHAR (100) NOT NULL,
  cod_especialidade INT NOT NULL REFERÊNCIAS especialidade (cod_especialidade)
);
CREATE TABLE paciente (
  id_paciente INT NOT NULL CHAVE PRIMÁRIA,
  nome_paciente VARCHAR (100) NOT NULL
);
CREATE TABLE consulta (
  id_consulta INT NOT NULL CHAVE PRIMÁRIA,
  id_medico INT NOT NULL REFERENCES medico (id_medico),
  id_paciente INT NOT NULL REFERÊNCIAS paciente (id_paciente),
  data_consulta DATA NOT NULL
);


e)
CREATE TABLE editora (
  cod_editora INT NOT NULL PRIMARY KEY,
  nom_editora VARCHAR (100) NOT NULL
);
CRIATE TABLE livro (
  id_livro INT PRIMARY KEY,
  num_isbn CHAR (13) NOT NULL UNIQUE,
  tit_livro VARCHAR (100) NOT NULL,
  num_paginas SMALLINT CHECK (num_paginas> 0),
  cod_editora INT NÃO NULL REFERENCES editora (cod_editora)
);  
CREATE TABLE aluno (
  id_aluno INT NOT NULL PRIMARY KEY,
  num_matricula INT NOT NULL UNIQUE,
  nom_aluno VARCHAR (100) NOT NULL
);
CREATE TABLE emprestimo (
  id_emprestimo INT NOT NULL PRIMARY KEY,
  id_livro INT NOT NULL REFERENCES livro (id_livro),
  id_aluno INT NOT NULL REFERENCES aluno (id_aluno),
  dat_emprestimo DATE NOT NULL,
  dat_devolucao DATE
);
